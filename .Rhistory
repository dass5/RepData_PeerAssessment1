geom_vline(xintercept = median(new_data$education), linetype="solid", color="blue")+
scale_linetype(name = "Limit") +
guides(linetype = guide_legend(override.aes = list(colour = "red")))
labs(title="Histogram for Years of Education") +
labs(x="Education", y="Count" )+
xlim(c(6,16))
ylim(c(1,15))
ggplot(data=new_data, aes(new_data$education)) + geom_histogram(breaks=seq(6, 16, by =.5),
col="red",
fill="green",alpha = .2) +
geom_vline(aes(xintercept = mean(new_data$education)), color="red", linetype="dashed") +
geom_vline(xintercept = median(new_data$education), linetype="solid", color="blue")+
scale_linetype(name = "Limit") +
guides(linetype = guide_legend(override.aes = list(colour = "red")))+
labs(title="Histogram for Years of Education") +
labs(x="Education", y="Count" )+
xlim(c(6,16))
ylim(c(1,15))
ggplot(data=new_data, aes(new_data$education)) + geom_histogram(breaks=seq(6, 16, by =.5),
col="red",
fill="green",alpha = .2) +
geom_vline(aes(xintercept = mean(new_data$education)), color="red", linetype="dashed") +
geom_vline(xintercept = median(new_data$education), linetype="solid", color="blue",labels="Lines",show_guide=TRUE)
ggplot(data=new_data, aes(new_data$education)) + geom_histogram(breaks=seq(6, 16, by =.5),
col="red",
fill="green",alpha = .2) +
geom_vline(aes(xintercept = mean(new_data$education)), color="red", linetype="dashed",labels="Lines",show_guide=TRUE) +
geom_vline(xintercept = median(new_data$education), linetype="solid", color="blue",labels="Lines",show_guide=TRUE)+
scale_linetype(name = "Limit") +
guides(linetype = guide_legend(override.aes = list(colour = "red")))+
labs(title="Histogram for Years of Education") +
labs(x="Education", y="Count" )+
xlim(c(6,16))
ylim(c(1,15))
ggplot(data=new_data, aes(new_data$education)) + geom_histogram(breaks=seq(6, 16, by =.5),
col="red",
fill="green",alpha = .2) +
geom_vline(aes(xintercept = mean(new_data$education)), color="red", linetype="dashed",labels="Lines",show_guide=TRUE) +
geom_vline(aes(xintercept = median(new_data$education)), linetype="solid", color="blue",labels="Lines",show_guide=TRUE)+
scale_linetype(name = "Limit") +
guides(linetype = guide_legend(override.aes = list(colour = "red")))+
labs(title="Histogram for Years of Education") +
labs(x="Education", y="Count" )+
xlim(c(6,16))
ylim(c(1,15))
cuts2 <- data.frame(Lines="Median", vals=median(new_data$education))
cuts1 <- data.frame(Lines="Average", vals=mean(new_data$education))
ggplot(data=new_data, aes(new_data$education)) + geom_histogram(breaks=seq(6, 16, by =.5),
col="red",
fill="green",alpha = .2) +
geom_vline(aes(data=cuts1,xintercept = vals,shape=Lines), color="red", linetype="dashed",labels="Average",show_guide=TRUE) +
geom_vline(aes(data=cuts2,xintercept = vals,shape=Lines), linetype="solid", color="blue",labels="Median",show_guide=TRUE)+
scale_linetype(name = "Limit") +
guides(linetype = guide_legend(override.aes = list(colour = "red")))+
labs(title="Histogram for Years of Education") +
labs(x="Education", y="Count" )+
xlim(c(6,16))
ylim(c(1,15))
ggplot(data=new_data, aes(new_data$education)) + geom_histogram(breaks=seq(6, 16, by =.5),
col="red",
fill="green",alpha = .2) +
geom_vline(data=cuts1,aes(xintercept = vals,shape=Lines), color="red", linetype="dashed",labels="Average",show_guide=TRUE) +
geom_vline(data=cuts2,aes(xintercept = vals,shape=Lines), linetype="solid", color="blue",labels="Median",show_guide=TRUE)+
labs(title="Histogram for Years of Education") +
labs(x="Education", y="Count" )+
xlim(c(6,16))
ylim(c(1,15))
cuts1
cuts2
ggplot(data=new_data, aes(new_data$education)) + geom_histogram(breaks=seq(6, 16, by =.5),
col="red",
fill="green",alpha = .2) +
geom_vline(data=cuts1,aes(xintercept = vals,shape=Lines), color="red",labels="Average",show_guide=TRUE) +
geom_vline(data=cuts2,aes(xintercept = vals,shape=Lines), color="blue",labels="Median",show_guide=TRUE)+
labs(title="Histogram for Years of Education") +
labs(x="Education", y="Count" )+
xlim(c(6,16))
ylim(c(1,15))
cuts=rbind(cuts1,cuts2)
ggplot(data=new_data, aes(new_data$education)) + geom_histogram(breaks=seq(6, 16, by =.5),
col="red",
fill="green",alpha = .2) +
geom_vline(data=cuts,aes(xintercept = vals, colour=Lines,show_guide=TRUE) +
labs(title="Histogram for Years of Education") +
labs(x="Education", y="Count" )+
xlim(c(6,16))
ylim(c(1,15))
ggplot(data=new_data, aes(new_data$education)) + geom_histogram(breaks=seq(6, 16, by =.5),
col="red",
fill="green",alpha = .2) +
geom_vline(data=cuts,aes(xintercept = vals, colour=Lines),show_guide=TRUE) +
labs(title="Histogram for Years of Education") +
labs(x="Education", y="Count" )+
xlim(c(6,16)
cuts
cuts
ggplot(data=new_data, aes(new_data$education)) + geom_histogram(breaks=seq(6, 16, by =.5),
col="red",
fill="green",alpha = .2) +
geom_vline(data=cuts,aes(xintercept = vals, linetype=Thresholds,color=Lines),show_guide=TRUE) +
labs(title="Histogram for Years of Education") +
labs(x="Education", y="Count" )+
xlim(c(6,16))
ylim(c(1,15))
ggplot(data=new_data, aes(new_data$education)) + geom_histogram(breaks=seq(6, 16, by =.5),
col="red",
fill="green",alpha = .2) +
geom_vline(data=cuts,aes(xintercept = vals, linetype=Lines,color=Lines),show_guide=TRUE) +
labs(title="Histogram for Years of Education") +
labs(x="Education", y="Count" )+
xlim(c(6,16))
ylim(c(1,15))
income_avg <- data.frame(Lines=c("Median","Average"), vals=c(mean(new_data$income),median(new_data$income))
#ggplot of histogram of income
Average=mean(new_data$income)
#ggplot of histogram of income
Average=mean(new_data$income)
Median=median(new_data$income)
income_avg <- data.frame(Lines=c("Median","Average"), vals=c(Median,Average)
)
income_avg
ggplot(data=new_data, aes(new_data$income)) + geom_histogram(breaks=seq(6, 16, by =.5),
col="red",
fill="green",alpha = .2) +
geom_vline(data=income_avg,aes(xintercept = vals, linetype=Lines,color=Lines),show_guide=TRUE) +
labs(title="Histogram for Years of Education") +
labs(x="Education", y="Count" )+
xlim(c(6,16))
ylim(c(1,15))
ggplot(data=new_data, aes(new_data$income)) + geom_histogram()
ggplot(data=new_data, aes(new_data$income)) + geom_histogram(breaks=seq(1000, 30000, by =10),
col="red",
fill="green",alpha = .2) +
geom_vline(data=income_avg,aes(xintercept = vals, linetype=Lines,color=Lines),show_guide=TRUE) +
labs(title="Histogram for Years of Education") +
labs(x="Education", y="Count" )
ggplot(data=new_data, aes(new_data$income)) + geom_histogram(breaks=seq(1000, 30000, by =10),
col="red",
fill="green",alpha = .2)
ggplot(data=new_data, aes(new_data$income)) + geom_histogram(breaks=seq(1000, 30000, by =1000),
col="red",
fill="green",alpha = .2)
ggplot(data=new_data, aes(new_data$income)) + geom_histogram(breaks=seq(1000, 30000, by =1000),
col="red",
fill="green",alpha = .2) +
geom_vline(data=income_avg,aes(xintercept = vals, linetype=Lines,color=Lines),show_guide=TRUE) +
labs(title="Histogram for Years of Income") +
labs(x="Income", y="Count" )
# Finally, letâ€™s draw a scatterplot of both variables to see their relationship:
ggplot(new_data, aes(x=new_data$education, y=new_data$income)) + geom_point()
ggplot(new_data, aes(x=new_data$education, y=new_data$income)) + geom_point()+
labs(title="Relationship between income and educaion") +
labs(x="Education", y="Income" )
mod = lm(income ~ education, data = new_data)
summary(mod)
education.c = scale(new_data$education, center=TRUE, scale=FALSE)
mod = lm(income ~ education.c, data = new_data)
summary(mod)
ggplot(education.c, income, data = new_data, main = "Relationship between Income and Education") +
stat_smooth(method="lm", col="red")
ggplot(data = new_data,aes(x=new_data$education.c, y=new_data$income) main = "Relationship between Income and Education") +
stat_smooth(method="lm", col="red")
ggplot(data = new_data,aes(x=new_data$education.c, y=new_data$income) )
ggplot(data = new_data,aes(x=education.c, y=new_data$income) ) +
stat_smooth(method="lm", col="red")
ggplot(data = new_data,aes(x=education.c, y=new_data$income) ) + geom_point()+
stat_smooth(method="lm", col="red")
ggplot(data = new_data,aes(x=education.c, y=new_data$income) ) + geom_point()+
labs(title="Relationship between income and educaion") +
labs(x="Education", y="Income" )+
stat_smooth(method="lm", col="red")
# visualize residuals and fitted values.
plot(mod, pch=16, which=1)
ggplot(new_data, aes(x=new_data$education, y=new_data$income)) + geom_point()+
labs(title="Relationship between income and educaion") +
labs(x="Education", y="Income" )
library(car)
library(ggplot2) # for some nice looking graphs!
ggplot(new_data, aes(x=new_data$education, y=new_data$income)) + geom_point()+
labs(title="Relationship between income and educaion") +
labs(x="Education", y="Income" )
ggplot(data = new_data,aes(x=education.c, y=new_data$income) ) + geom_point()+
labs(title="Relationship between income and educaion") +
labs(x="Education", y="Income" )+
stat_smooth(method="lm", col="red")
str(mtcars)
mpg=mtcars$mpg
wt=mtcars$wt
cyl=mtcars$cyl
fit1=lm(mpg~factor(cyl)+wt)
summary(fit1)
factor(cyl)
summary(fit1)
factor(cyl)
fit2=lm(mpg~factor(cyl))
summary(fit2)
summary(fit1)
summary(fit2)
mod=lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
summary(mod)
dfbetas(mod)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit = lm(y ~ x) # OLS including all points
X = model.matrix(fit) # X model matrix
hat_matrix = X%*%(solve(t(X)%*%X)%*%t(X)) # Hat matrix
diag(hat_matrix)[1] # First diagonal point in Hat matrix
hat_matrix
X
diag(hat_matrix)
dfbetas(fit)
fit = lm(y ~ x) # OLS including all points
X = model.matrix(fit) # X model matrix
hat_matrix = X%*%(solve(t(X)%*%X)%*%t(X)) # Hat matrix
diag(hat_matrix)[1] # First diagonal point in Hat matrix
dfbetas(fit)
dfbetas(fit)
influence.measures(fit)
mpg=mtcars$mpg
wt=mtcars$wt
cyl=mtcars$cyl
fit1=lm(mpg~factor(cyl)+wt)
summary(fit1)
fit2=lm(mpg~factor(cyl))
summary(fit2)
mcyl<-factor(mtcars$cyl)
fit1<-lm(mpg~mcyl+wt, data = mtcars)
fit2<-lm(mpg~mcyl+wt+mcyl*wt, data = mtcars)
lrtest(fit1, fit2)
library(epicalc)
install.pckages("epicalc")
install.packages("epicalc")
library(epicalc)
install.packages("epiDisplay")
library("epicalc")
library("epiDisplay")
lrtest(fit1, fit2)
library(lmtest)
install.packages("lmtest")
library(lmtest)
lrtest(fit1, fit2)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit = lm(y ~ x) # OLS including all points
influence.measures(fit)
library(MASS)
head(shuttle,n=5)
mod=lm(shuttle$use~shuttle$wind)
use=shuttle$use
wind=shuttle$wind
mod=lm(use~wind)
str(shuttle)
mod=lm(factor(use)~wind)
shuttle$use1=ifelse(shuttle$use =="auto", 1,0)
shuttle
head(shuttle)
shuttle[shuttle$use =="auto"]
shuttle[shuttle$use =="auto",]
shuttle[shuttle$use =="noauto",]
use=shuttle$use1
wind=shuttle$wind
mod=lm(factor(use)~wind)
use=as.numeric(shuttle$use1)
wind=shuttle$wind
mod=lm(factor(use)~wind)
str(shuttle)
str(mpg)
str(mtcars)
wind=as.numeic(shuttle$wind)
wind=as.numeric(shuttle$wind)
mod=lm(factor(use)~wind)
shuttle$use=ifelse(shuttle$use =="auto", 1,0)
head(shuttle)
use=as.numeric(shuttle$use)
wind=as.numeric(shuttle$wind)
str(shuttle)
wind=as.numeric(shuttle$wind)
str(shuttle)
wind=as.numeric(shuttle$wind)
shuttle$use=as.numeric(shuttle$use)
shuttle$wind=as.numeric(shuttle$wind)
str(shuttle)
mod=lm(factor(use)~wind,shuttle)
mod=lm(use~wind,shuttle)
mod
head(mtcars)
unique(mtcars$am)
head(mtcars)
Sys.which("pdflatex")
Sys.which("pdflatex")
Sys.which("pdflatex")
Sys.which("pdflatex")
Sys.which("pdflatex")
unique(mtcars$am)
head(mtcars)
var=if mtcars$am=1,"Automatic","Manual"
var=if(mtcars$am=1,"Automatic","Manual")
var=if(mtcars$am==1,"Automatic","Manual")
var
var=ifelse(mtcars$am==1,"Automatic","Manual")
var
ddply(mtcars,~am,summarise,mean=mean(mpg))
library("plyr")
ddply(mtcars,~am,summarise,mean=mean(mpg))
mtcars$manual=mtcars[mtcars$am=="Manual",]
mtcars[mtcars$am=="Manual",]
tcars$am
mtcars$am
mtcars$auto=mtcars[mtcars$am==1,]
mtcars$manual=mtcars[mtcars$am==0,]
mtcars[mtcars$am==0,]
mtcars$manual=mtcars[mtcars$am==0,]
mtcars$manual
mtcars$manual=mtcars[mtcars$am==0,]
manual$am
manual=mtcars[mtcars$am==0,]
auto=mtcars[mtcars$am==1,]
t.test(manual$am,auto$am)
manual$am
t.test(manual$mpg,auto$mpg)
head(mtcars)
mtcars[,c(1,2,3,4,6,9)]
plot(cor(mtcars[,c(1,2,3,4,6,9)])
)
cor(mtcars[,c(1,2,3,4,6,9)])
plot(cor(mtcars[,c(1,2,3,4,6,9)]))
cor(mtcars[,c(1,2,3,4,6,9)])
plot(mtcars[,c(1,2,3,4,6,9)])
cor(mtcars[,c(1,2,3,4,6,9)])
str(mtcars)
leverage <- hatvalues(multimodel)
simplemodel=lm(mpg~am,data=mtcars)
multimodel=lm(mpg~am+cyl+disp+hp+wt,data=mtcars)
leverage <- hatvalues(multimodel)
tail(sort(leverage),3)
leverage
influential <- dfbetas(best_model)
influential <- dfbetas(multimodel)
tail(sort(influential[,6]),3)
tail(sort(leverage),3)
influential <- dfbetas(multimodel)
tail(sort(influential[,6]),3)
cor(mtcars)
plot(mtcars)
cor(mtcars)
multimodel=lm(mpg~cyl+disp+hp+wt,data=mtcars)
summary(multimodel)
aggdata <-aggregate(steps ~ date, data, sum)
setwd("Q:/R/ReproducibleResearch/project1/RepData_PeerAssessment1")
data <- read.table("activity.zip")
data <- read.csv(unzip("activity.zip"), sep=",")
head(data,20)
aggdata <-aggregate(steps ~ date, data, sum)
hist(aggdata$steps)
data %>%
group_by(date) %>%
dplyr::summarize(Mean = mean(steps))
library(dplyr)
group_data=data %>%
group_by(date) %>%
dplyr::summarize(Mean = mean(steps, na.rm=TRUE))
group_data
group_median=data %>%
group_by(date) %>%
dplyr::summarize(median = median(steps))
group_median
group_median=data %>%
group_by(date) %>%
dplyr::summarize(median = median(steps,, na.rm=TRUE))
group_median
data %>%
group_by(date) %>%
summarise_each(funs(max, min, mean, median, sd), steps)
group_median=data %>%
group_by(date) %>%
dplyr::summarize(median = median(steps, na.rm=TRUE))
group_median
head(data,20)
median(steps, na.rm=TRUE)
median(data$steps, na.rm=TRUE)
data$steps, na.rm=TRUE
data[na.rm=TRUE]
dat=na.omit(data)
median(dat$steps, na.rm=TRUE)
dat
head(dat)
head(dat,n=5)
head(data,n=5)
tail(data,n=5)
unique(data$steps)
str(data)
rep(NA, 10)
median(rep(NA, 10), na.rm = TRUE)
data1=c(12,3,4,NA,5)
median(data1)
data1
mean(data1)
median(dat$steps)
median(data$steps)
head(dat,n=5)
head(dat,n=30)
tail(dat,n=30)
head(data,20)
data1=data[data$date='2012-10-01']
data1=data[data$date=='2012-10-01']
data1=data[data$date=='2012-10-01',]
head(data1)
str(data)
data1=data[as.char(data$date)=='2012-10-01',]
data1=data[as.character(data$date)=='2012-10-01',]
head(data1)
as.character(data$date)
as.date(data$date)
as.Date(data$date)
data1=data[as.Date(data$date)=='2012-10-01',]
head(data1)
as.Date(data$date)=='2012-10-01'
data1=data[as.Date(data$date)=='2012-10-01',]
head(data1)
data1=data[!as.Date(data$date)=='2012-10-01',]
head(data1)
data1=data[as.Date(data$date)=='2012-10-02',]
head(data1)
data1=data[as.Date(data$date)=='2012-10-03',]
head(data1)
median(data1$steps)
data1=data[as.Date(data$date)=='2012-10-02',]
head(data1)
data %>%
group_by(date) %>%
summarise_each(funs(max, min, mean, median, sd), steps)
group_median
group_median[!group_median==0,]
group_median[!group_median$median==0,]
group_median
tail(group_median)
head(data,20)
data1=data[as.Date(data$date)=='2012-10-04',]
head(data1)
median(data1$steps)
data %>%
group_by(date) %>%
summarise_each(funs(max, min, mean, median, sd), steps)
head(data,20)
data5=data[data$interval==5,]
head(data5)
head(data,20)
head(data5)
group_interval=data %>%
group_by(interval) %>%
dplyr::summarize(Mean = mean(steps, na.rm=TRUE))
group_interval
head(data,20)
data %>%
group_by(interval) %>%
summarise_each(funs(max, min, mean, median, sd), steps)
group_interval=data %>%
group_by(interval) %>%
dplyr::summarize(Mean = mean(steps, na.rm=TRUE))
group_interval
group_interval=data %>%
group_by(interval) %>%
dplyr::summarize(Mean = mean(steps))
group_interval
tail(group_interval)
data %>%
group_by(interval) %>%
dplyr::summarize(Mean = sum(steps))
plot(group_interval$Mean,group_interval$interval)
group_interval$Mean
mean(steps,na.rm=TRUE)
data %>%
group_by(interval) %>%
dplyr::summarize(Mean = mean(steps,na.rm=TRUE))
group_interval=data %>%
group_by(interval) %>%
dplyr::summarize(Mean = mean(steps,na.rm=TRUE))
plot(group_interval$Mean,group_interval$interval)
plot(group_interval$Mean,group_interval$interval,type="l")
plot(group_interval$interval,group_interval$Mean,type="l")
data %>%
group_by(steps) %>%
summarise_each(funs(max, min, mean, median, sd), steps)
data %>%
group_by(interval) %>%
summarise_each(funs(max, min, mean, median, sd), steps)
data %>%
group_by(interval) %>%
summarise_each(funs(max, min, mean, median, sd,na.rm=TRUE), steps)
group_interval
max(group_interval$Mean)
max(group_interval$Mean)
group_interval[group_interval$Mean==max(group_interval$Mean),]
#Total no with NA
data[is.na]
#Total no with NA
data[!is.na]
#Total no with NA
data[is.na=TRUE]
is.na=TRUE
#Total no with NA
data[is.na]
#Total no with NA
data[is.na(data$steps)]
is.na(data$steps)
#Total no with NA
data[is.na(data$steps),]
#Total no with NA
data[is.na(data),]
#Total no with NA
nrow(data[is.na(data),])
nrow(data[is.na(data$steps),])
